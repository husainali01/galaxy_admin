package com.dotcom.jamaatAdmin.adapters;import android.content.Context;import android.graphics.Color;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseExpandableListAdapter;import android.widget.ImageView;import android.widget.TextView;import com.dotcom.jamaatAdmin.model.Child;import com.dotcom.jamaatAdmin.model.Group;import com.dotcom.jamaatAdmin.R;import java.util.ArrayList;public class ExpandListAdapter extends BaseExpandableListAdapter {	private Context context;	private ArrayList<Group> groups;	public ExpandListAdapter			(Context context, ArrayList<Group> groups) {		this.context = context;		this.groups = groups;	}	@Override	public Object getChild(int groupPosition, int childPosition) {		ArrayList<Child> chList = groups.get(groupPosition).getItems();		return chList.get(childPosition);	}	@Override	public long getChildId(int groupPosition, int childPosition) {		return childPosition;	}	@Override	public View getChildView(int groupPosition, int childPosition,							 boolean isLastChild, View convertView, ViewGroup parent) {		Child child = (Child) getChild(groupPosition, childPosition);		if (convertView == null) {			LayoutInflater infalInflater = (LayoutInflater) context					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);			convertView = infalInflater.inflate(R.layout.child_item, null);		}		TextView tv = (TextView) convertView.findViewById(R.id.group_child);		//ImageView iv = (ImageView) convertView.findViewById(R.id.flag);//		for (int k = 0; k<group.getCount().length; k++) {//			if(group.getCount()){//				tv.setTextColor(Color.parseColor("#AFAFAF"));//			}//		}		tv.setText(child.getName().toString());		if(groupPosition == 0){            if(child.getCount() == 0){                tv.setTextColor(Color.parseColor("#AFAFAF"));            }else            {                tv.setTextColor(Color.parseColor("#000000"));            }		}        else        {            tv.setTextColor(Color.parseColor("#000000"));        }		//iv.setImageResource(child.getImage());		convertView.setTag(child);		return convertView;	}	@Override	public int getChildrenCount(int groupPosition) {		ArrayList<Child> chList = groups.get(groupPosition).getItems();		if(chList!=null) {			return chList.size();		}		return 0;	}	@Override	public Object getGroup(int groupPosition) {		return groups.get(groupPosition);	}	@Override	public int getGroupCount() {		return groups.size();	}	@Override	public long getGroupId(int groupPosition) {		return groupPosition;	}	@Override	public View getGroupView(int groupPosition, boolean isExpanded,							 View convertView, ViewGroup parent) {		Group group = (Group) getGroup(groupPosition);		if (convertView == null) {			LayoutInflater inf = (LayoutInflater) context					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);			convertView = inf.inflate(R.layout.group_item, null);		}		TextView tv = (TextView) convertView.findViewById(R.id.group_name);		ImageView group_flag = (ImageView) convertView.findViewById(R.id.group_flag);		final ImageView group_indicatiorImage = (ImageView) convertView.findViewById(R.id.group_indicatiorImage);		//Showing and hiding the expandable image and chnaging the imge afte group click		ArrayList<Child> groupChildList = group.getItems();		if(groupChildList != null && groupChildList.size() > 0)		{			group_indicatiorImage.setVisibility(View.VISIBLE);			if(isExpanded)			{				group_indicatiorImage.setImageResource(R.drawable.up_arrow_icon);			}			else			{				group_indicatiorImage.setImageResource(R.drawable.down_arrow_icon);			}		}		else		{			group_indicatiorImage.setVisibility(View.GONE);		}		tv.setText(group.getName());		group_flag.setImageResource(group.getImage());		convertView.setTag(group);		return convertView;	}	@Override	public boolean hasStableIds() {		return true;	}	@Override	public boolean isChildSelectable(int groupPosition, int childPosition) {		return true;	}}